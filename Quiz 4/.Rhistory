tail(mtcars)
head(mtcars, 10)
head(mtcars,1)
str(mtcars)
summary(mtcars)
?str
str( lsfit(1:9, 1:9))
str(ls)
?ls
.Ob <- 1
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
x<-22
.Ob <- 1
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
ls(pattern= "O", all.names = TRUE)
ls(pattern= "O", all.names = TRUE)
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
.Ob <-2
.Ob <- 1
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
.Ob <- 2
.Ob <- 1
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
.Ob <- 2
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
.Oc <- 2
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
?.O
??.O
help
.object
.o <-2
.o <-3
.o
.x <-5
x<-5
ls
ls()
ls(pattern = "x")
xy <- 6
ls(pattern = "x")
.xyx <-1
ls(pattern = "x")
ls(pattern = "x", all.names = true)
ls(pattern = "x", all.names = TRUE)
.xy
.xyx
xy
.xyx
mtcars
mtcars[1,2]
mtcars[1,]
mtcars[1]
mtcars[,1]
head(mtcars)
mtcars$mpg
mtcars$mpg >20
mtcars[ mtcars$mpg>20, ]
mtcars[$mpg >20,]
mtcars[ mtcars$mpg>20, ]
mtcars[, pattern = "mazda"]
str(mtcars)
mtcars
mtcars(pattern = "mazda")
mtcars[mtcars$mpg>20, c(disp)]
mtcars[mtcars$mpg>20, c('mpg','disp')
]
mtcars[mtcars$mpg>20 && mtcars$mpg = 'Mazda',]
mtcars[mtcars$mpg>20 && mtcars$= 'Mazda',]
mtcars
mtcars[mtcars$mpg>20 && mtcars= 'Mazda',]
mtcars[mtcars$mpg>20 and mtcars= 'Mazda',]
mtcars[mtcars$mpg>20 & mtcars= 'Mazda',]
mtcars[mtcars$mpg>20 & mtcars= "Mazda",]
mtcars["Mazda"]
mtcars[pattern = "Mazda"]
LETTERS[1:3]
L3 = LETTERS[1:3]
L3 <- LETTERS [1:3]
le
L3
fac <- sample(L3, 10, replace = TRUE)
face
fac
fac2 <- sample(L3, 10, replace = TRUE)
fac2
fac3 <- sample(L3, 10, replace = FALSE)
<- sample(L3, 3, replace = TRUE)
fac <- sample(L3, 3, replace = FALSE)
fac
fac <- sample(L3, 10, replace = TRUE)
fac
(d <- data.frame(x = 1, y = 1:10, fac = fac))
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
(dd <- cbind(d, char = I(letters[1:10])))
(ddd <- cbind(dd, num = 10:20))
(ddd <- cbind(dd, num = I(10:20)))
(ddd <- cbind(dd, num = I(from 10, to 20)))
(ddd <- cbind(dd, num = I([1:10])))
(ddd <- cbind(dd, num = I[1:10]))
(ddd <- c(dd, num<-1:10))
ddd
dd
dd.x
dd['x']
dd['x','y']
ddd <- c(dd['x'], dd['y'], dd['fac'], dd['char'], 11:20)
ddd
ccc <- (1:10)
ccc
ccc <-(test,1:10)
ccc <-("e",1:10)
ccc <-(,1:10)
ccc <-[,1:10]
ccc = [,1:10]
ccc = [1:10]
ccc = (1:10)
ccc
first <- ("one", "two", "three")
first <- "one", "two", "three"
first <- c("one", "two", "three")
first
second <- c("a", "b", "c")
second
third <- c("first", "second")
third
third <- data.frame("first", "second")
third
third <- data.frame(first, second)
third <- data.frame (first, second)
third
ddd <- data.frame(dd['x'], dd['y'], dd['fac'], dd['char'], 11:20)
ddd
ddd <- data.frame(dd['x'], dd['y'], dd['fac'], dd['char'], num = 11:20)
ddd
ddd <- data.frame(dd, num =11:20)
ddd
d4 <- data.frame(ddd, testing = 21:30)
d4
?spam
help.search("spam")
^L
^L
install.packages("swirl")
library("swirl")
swirl
swirl()
base
base()
?base
help.search("base")
help = base
help = "base"
help(base)
library(help = "base")
x <- (5,6)
x <- [5,6]
x <- ("5", "6")
x
x <- ["5", "6"]
x <- c("5","6")
x
x<-c(5,6)
x
x[2]
?vector
df <- data.frame(x = 1:3, y = 4:6)
df
?try
try(as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric"))
as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric")
as.vector(data.frame(x = 1.0:3.0, y = 5.0:7.0), mode = "numeric")
as.vector(data.frame(x = 1:3, y = 5:7), mode = "integer")
try(as.vector(data.frame(x = 1:3, y = 5:7), mode = "integer"))
try(as.vector(data.frame(x = 1:3, y = 5:7), mode = "double"))
try(as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric"))
try(as.vector(data.frame(x = 1:3, y = 5:7), mode = "any"))
as.vector(data.frame(x = 1:3, y = 5:7), mode = "any")
as.vector(data.frame(x = 1:3, y = 5:7),)
x <- c(a = 1, b = 2)
is.vector(x)
as.vector(x)
as.vector(x, mode = "numeric")
m <- matrix(3,2)
m
m <- matrix (nrow = 3, ncol = 4)
m
?matrix
m2 <- matrix (data = "hello", nrow = 4, ncol = 6)
m2
dim(m2)
attributes(m2)
?attributes
x < 1:5
x <- 1:5
x
y <- 41:45
rbind(x,y)
z <- rbind(x,y)
z
a <- list(x, y)
a
a <- list(z2)
z
a <-list(z)
a
attributes(z)
z
dimnames(z) <-(,"a" "b" "c" "d" "e")
dimnames(z) <-("x" "y","a" "b" "c" "d" "e")
?dimname
?dimnames
dimnames(z) <- ("xy", "abcde")
dimnames(z) <- ("xy", "abcde")
dimnames(z) <- c("xy", "abcde")
dim(z)
dimnames(z) <- x <- ("xy", "abcde")
dimnames(z) <- x <- c("xy", "abcde")
dimnames(z)
provideDimnames(z, sep = " ", tail = list(abcde))
provideDimnames(z, sep = " ", tail = list(abcde))
dimnames(z)
provideDimnames(z, sep = " ", base = list(abcde))
provideDimnames(z, sep = " ", base = list(ab))
provideDimnames(z, sep = " ", base = list("ab"))
provideDimnames(z, sep = " ", base = list("a" "b" "c" "d" "e"))
provideDimnames(z, sep = " ", base = ("a" "b" "c" "d" "e"))
provideDimnames(z, sep = " ", base = list("abcdefg"))
provideDimnames(z, sep = " ", tail= list("ab"))
provideDimnames(z, sep = " ", tail = list("ab"))
provideDimnames(z, sep = " ", base = list(LETTERS))
provideDimnames(z, sep = " ", base = list(c("a" , "b", "c", "d", "e")))
provideDimnames(z, sep = " ", base = list(c("a" , "b", "c", "d", "e")), tail = list(LETTERS))
provideDimnames(z, sep = " ", base = list(c("a" , "b", "c", "d", "e")), tail = list(LETTERS)))
provideDimnames(z, sep = " ", base = list(c("a" , "b", "c", "d", "e")), tail = list(LETTERS))
provideDimnames(z, sep = " ", base = list(c("a" , "b", "c", "d", "e")), tail(LETTERS))
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[[1]]
?na
?NA
x <-c (1, 2, NA, 4, NA, 5)
bad <- is.na(x)
bad
x(!bad)
x[!bad]
x$!bad
x$bad
?$
x[[!bad]]
ozone <- c(41, 36, 12, 18, NA, 28)
ozone
solar.R <- c(190, 118, 149, 313, NA, NA)
wind <- c(7.4, 8.0, 12.6, 11.5, 14.3, 14.9)
temp <- c(67, 72, 74, 62, 56, 66)
month <- c(5,5,5,5,5)
day <- c(1,2,3,4,5,6)
month <- c(5,5,5,5,5,5)
month
test <- rbind(ozone, solar.R)
test
test <- cbind(ozone, solar.R, wind, temp, month, day)
test
?matrix
test[1:6]
test[1:6, ]
good <- complete.cases(test)
good
test[good, ]
test[good, ][1:6,]
View(test)
test[1][2]
test[]
test[1,][2,]
test[[1,]][[2,]]
test[[1]][[2]]
test[1]
test[2]
test[1,]
test[1,5][2,5]
x <- factor(c("yes", "yes", "no", "yes", "no"))
factor
x
table(x)
unclass(x)
?attr
?factor
?data.frame
?sample
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
(d <- data.frame(x = 1, y = 1:10, fac))
(d <- data.frame(x = 1, y = 1:10, row.names=fac))
(d <- data.frame(x = 1, y = 1:10, face=fac))
(d <- data.frame(x = 1, y = 1:10, fac=fac), row.names = c("a"))
(d <- data.frame(x = 1, y = 1:10, fac), row.names = c("a"))
(d <- data.frame(x = 1, y = 1:10, fac), row.names = "a")
(d <- data.frame(x = 1, y = 1:10, fac), row.names = "A")
(d <- data.frame((x = 1, y = 1:10, fac), row.names = "A"))
(d <- data.frame((x = 1, y = 1:10, fac=fac), row.names = "A"))
(d <- data.frame((x = 1, y = 1:10, fac=fac), row.names = NULL))
(d <- data.frame(x = 1, y = 1:10, fac=fac, row.names = NULL))
(d <- data.frame(x = 1, y = 1:10, fac=fac, row.names = "A"))
A <-c(6:15)
(d <- data.frame(x = 1, y = 1:10, fac=fac, row.names = A))
data
rawdata <- read.csv("~/Desktop/Data Science - Coursera/R Programming/Quiz 1 dataset/hw1_data.csv")
View(rawdata)
v <- vector(1:99)
v
?vector
v <- c(1:99)
v
rdata <- rawdata
rdata
rdata[1, "Ozone"]
rdata[ , "Ozone"]
rdata$Ozone
?$
rdata[["Ozone"]]
rdata[[1,"Ozone"]]
class(rdata[[1,"Ozone"]])
class(rdata[1,"Ozone"])
class(rdata$Ozone)
?read.csv
rowin <- 18:23
colin <- 7:15
readdata <- read.csv("data2.csv", colIndex = colin, rowIndex = rowin)
readdata <- read.csv("data2.csv", sep = ",", header = TRUE)
readdata <- read.csv("./data2.csv", sep = ",", header = TRUE)
readdata <- read.csv("./data2.csv")
readdata <- read.csv("data2.csv")
getwd()
readdata <- read.csv("./Desktop/data2.csv", colIndex = colin, rowIndex = rowin)
readdata <- read.csv("./Desktop/data2.csv")
head(readdata)
file <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv
file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
install.package("data.table")
install.packages("data.table")
library(data.table)
DT <- fread(file)
?fread
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
DT <- fread(fileurl)
?read.table
DT <- fread(fileurl, "data.csv")
download.file(fileurl, destfile = "data.csv")
download.file(fileurl, destfile = "data.csv", method = "curl")
DT <- fread("data.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(mean(DT[DT$SEX==2,]$pwgtp15))
)
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
getwd()
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[,DT$SEX==1]
?rowMeans
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(DT[,mean(pwgtp15),by=SEX])
DT[,mean(pwgtp15),by=SEX]
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
View(readdata)
getwd()
dir
dir()
install.packages("RMySQL")
library(RMySQL)
install.packages("RMySQL")
gcc
?strsplit
getwd()
setwd("/Users/Matt/Desktop/Data ScienceCoursera/Getting&Cleaning/Quiz 4")
getwd()
ls
dir()
?read.csv
filename <- ""getdata-data-ss06hid.csv""
dataread <- read.csv(file = filename)
filename <- "getdata-data-ss06hid.csv"
dataread <- read.csv(file = filename)
names(dataread)
head(dataread)
tolower(names(dataread))
dataread$wgtp[123]
dataread$wgtp
head(dataread)
dataread$WGTP
dataread$WGTP[123]
dataread <- tolower(names(dataread))
?strsplit
splitname <- strsplit(names(dataread), "wgtp")
str(dataread)
dataread <- read.csv(file = filename)
dataread <- tolower(dataread)
splitname <- strsplit(names(dataread), "wgtp")
str(dataread)
head(dataread)
dataread <- read.csv(file = filename)
splitname <- strsplit(names(dataread), "wgtp")
head(splitname)
splitname[[123]]
dir()
filename2 <- "getdata-data-GDP.csv"
dataread2 <- read.csv(file = filename2)
str(dataread2)
View(dataread2)
dataread2<- sub("\,", "", dataread2$X.3,)
dataread2<- sub(",", "", dataread2$X.3,)
dataread2
dataread2 <- read.csv(file = filename2)
str(dataread2)
dataread2 <- dataread2[,5:330]
dataread2 <- dataread2[5:330,]
dataread2
head(dataread2)
remcomma<- gsub(",", "", dataread2$X.3)
head(remcomma)
remcomma <- remcomma[,1:194]
remcomma <- remcomma[1:194,]
remcomma <- remcomma[1:194]
head(remcomma)
str(remcomma)
x<-as.numeric(remcomma)
remcomma<- gsub("\\,", "", dataread2$X.3)
head(remcomma)
remcomma
remcomma<- gsub("\\,","", dataread2$X.3)
remcomma
as.numeric(remcomma)
remcomma <- remcomma[1:194]
as.numeric(remcomma)
str(remcomma)
x <- as.numeric(remcomma)
remcomma <- remcomma[1:190]
x <- as.numeric(remcomma)
x
mean(x)
?grep
View(dataread2)
dataread2[,2]
View(dataread2)
grep("^United",dataread2$X.2), 4
grep("^United",dataread2$X.2)
ls
dir()
GDPdata <- read.csv("4gdp.csv")
GDPdata[1:200,]
GDPdata <- GDPdata[5:194,]
GDPdata
dir()
EDUdata <- read.csv("4edu.csv")
View(EDUdata)
View(GDPdata)
View(EDUdata)
?grep
View(GDPdata)
View(EDUdata)
View(EDUdata)
grepl("Fiscal year end: June", x = EDUdata$Special.Notes, ignore.case = TRUE)
table(grepl("Fiscal year end: June", x = EDUdata$Special.Notes, ignore.case = TRUE))
table(grepl("Fiscal year end: June", x = EDUdata$Special.Notes, ignore.case = F))
install.packages("quantmod")
library()
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
sampleTimes
table(grepl("^2012", x = sampleTimes))
sampleTimes[grepl("^2012", x = sampleTimes)]
only2012 <- sampleTimes[grepl("^2012", x = sampleTimes)]
str(sampleTimes)
weekdays(sampleTimes)
only2012
only2012days <- weekdays(only2012)
only2012days
subset(only2012days, "Monday")
subset(only2012days, only2012days = "Monday")
only2012days
only2012days["Mondays"]
only2012days["Monday"]
str(only2012days)
table(grepl("Monday", x = only2012days))
